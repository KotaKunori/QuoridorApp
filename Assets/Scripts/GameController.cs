using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace TreasureHunting
{
    public class GameController : MonoBehaviour
    {
        public View view;
        Player player1;
        Player player2;
        Board board;

        private int errorLimit = 10000;
        private Players currentPlayer = Players.player1;//???????v???[???[???????A???????????v???[???[?P
        private bool wallSettingFaseFlag = true;

        // Start is called before the first frame update
        void Start()
        {
            player1 = new Player(new W_Wall_Algorithm(), new W_Move_Algorithm());
            player2 = new Player(new W_Wall_Algorithm(), new W_Move_Algorithm());
            board = new Board();
            view.drawInitialState(board.getState());//?????????????????????A???????????`??
        }

        public void ContinueGame()
        {
            int errorCount;
            if (wallSettingFaseFlag)//?????u?t?F?[?Y??????
            {
                State currentState = board.getState();//?????N???X??????????????????
                Wall wall = new Wall();//???????W????????????
                if(currentPlayer == Players.player1)
                {
                    for (errorCount = 0; errorCount < errorLimit; errorCount++)
                    {
                        wall = player1.Call_getWallPosition(currentState);//?????????????????A?v???[???[A???????W??????????
                        if (board.wallSettingEnable(wall))//enableAction(action): ?s???????\?????????????????\?b?h
                        {
                            break;
                        }
                    }
                    if (errorCount == errorLimit)//?K???????????G???[???m?F???????????????s?k
                    {
                        view.showWinner(Players.player2);
                        return;
                    }
                    board.wallSetting(Players.player1, wall);//?v???[???[???s?????????N???X???`?B???A???????X?V
                    view.drawWall(Players.player1, wall);//???????u???`??
                    currentPlayer = Players.player2;
                }
                else
                {
                    for (errorCount = 0; errorCount < errorLimit; errorCount++)
                    {
                        wall = player2.Call_getWallPosition(currentState);//?????????????????A?v???[???[A???????W??????????
                        if (board.wallSettingEnable(wall))//enableAction(action): ?s???????\?????????????????\?b?h
                        {
                            break;
                        }
                    }
                    if (errorCount == errorLimit)//?K???????????G???[???m?F???????????????s?k
                    {
                        view.showWinner(Players.player1);
                        return;
                    }
                    board.wallSetting(Players.player2, wall);//?v???[???[???s?????????N???X???`?B???A???????X?V
                    view.drawWall(Players.player2, wall);//???????u???`??
                    currentPlayer = Players.player1;
                    if (board.getRestWallCount() == 0)//?????????????O?????v???[???[?Q?????t???O??????
                    {
                        wallSettingFaseFlag = false;
                        player1.setInitialState(board.getPlayerPosition(Players.player1), board.getTreasurePosition());
                        player2.setInitialState(board.getPlayerPosition(Players.player2), board.getTreasurePosition());
                    }
                }

            }
            else//?T???t?F?[?Y??????
            {
                if(currentPlayer == Players.player1)
                {
                    VisibleState currentState = board.getVisibleState(Players.player1);//?????N???X??????????????????
                    MoveActions action = MoveActions.up;
                    for (errorCount = 0; errorCount < errorLimit; errorCount++)
                    {
                        action = player1.Call_getAction(currentState);//?????????????????A?v???[???[A???s????????????
                        if (board.moveActionEnable(Players.player1, action))//?s???????\?????????????????\?b?h
                        {
                            break;
                        }
                    }
                    if (errorCount == errorLimit)//?K???????????G???[???m?F???????????????s?k
                    {
                        view.showWinner(Players.player2);
                    }
                    board.moveAction(Players.player1, action);//?v???[???[???s?????????N???X???`?B???A???????X?V
                    view.drawAction(Players.player1, action);
                    if(board.getPlayerPosition(Players.player1).x == board.getTreasurePosition().x && board.getPlayerPosition(Players.player1).y == board.getTreasurePosition().y)//?????v???[???[?????????????????????I??
                    {
                        view.showWinner(Players.player1);
                    }
                    if(board.getPlayerPosition(Players.player1) != board.getPlayerPosition(Players.player2))
                    {
                        currentPlayer = Players.player2;
                    }
                }
                else
                {
                    VisibleState currentState = board.getVisibleState(Players.player2);//?????N???X??????????????????
                    MoveActions action = MoveActions.up;
                    for (errorCount = 0; errorCount < errorLimit; errorCount++)
                    {
                        action = player2.Call_getAction(currentState);//?????????????????A?v???[???[A???s????????????
                        if (board.moveActionEnable(Players.player2, action))//?s???????\?????????????????\?b?h
                        {
                            break;
                        }
                    }
                    if (errorCount == errorLimit)//?K???????????G???[???m?F???????????????s?k
                    {
                        view.showWinner(Players.player1);
                    }
                    board.moveAction(Players.player2, action);//?v???[???[???s?????????N???X???`?B???A???????X?V
                    view.drawAction(Players.player2, action);
                    if (board.getPlayerPosition(Players.player2).x == board.getTreasurePosition().x && board.getPlayerPosition(Players.player2).y == board.getTreasurePosition().y)//?????v???[???[?????????????????????I??
                    {
                        view.showWinner(Players.player2);
                    }
                    if (board.getPlayerPosition(Players.player1) != board.getPlayerPosition(Players.player2))
                    {
                        currentPlayer = Players.player1;
                    }
                }

            }
        }

        public Position getPlayerPosition(Players player)
        {
            return board.getPlayerPosition(player);
        }
    }
}
