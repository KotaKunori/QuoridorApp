using System.Collections;
using System.Collections.Generic;

namespace TreasureHunting
{   
    public class Board
    {
        BoardWallImplementor wallImplementor;
        BoardSearchImplementor searchImplementor;

        State statas = new State();

        public Board()
        {
            wallImplementor = new BoardWallImplementor(this);
            searchImplementor = new BoardSearchImplementor(this);
        }
        /*?????????????????u???????????\?b?h*/

        /// <summary>
        /// ???????????????????\?b?h
        /// </summary>
        public State getState()
        {
            State newState = new State();
            newState.setState((int[, ]) statas.getState().Clone());
            return newState;
        }

        public void setState(State state)
        {
            statas = state;
        }

        /// <summary>
        /// ???????u?????\?????????????????\?b?h
        /// </summary>
        /// <param name="wall">???u???????????W???????????N???X</param>
        /// <returns>???????u???\????????</returns>
        public bool wallSettingEnable(Wall wall)
        {
            return wallImplementor.wallSettingEnable(wall);
        }

        /// <summary>
        /// ?v???[???[???w?????????W?????????u???????\?b?h
        /// </summary>
        /// <param name="player">???????u?????v???[???[</param>
        /// <param name="wall">???????W???????????N???X</param>
        public void wallSetting(Players player, Wall wall)
        {
            statas = wallImplementor.wallSetting(player, wall);
        }



        /// <summary>
        /// ?v???[???[???g?p???\???c???????????????????\?b?h
        /// </summary>
        /// <returns>??????</returns>
        public int getRestWallCount()
        {
            return wallImplementor.getRestWallCount();
        }


        /*?????????????T?????????????\?b?h*/


        /// <summary>
        /// ?w?????????v???[???[???F?m???\???????????????\?b?h
        /// </summary>
        /// <param name="player">?w?????????v???[???[</param>
        /// <returns>?F?m???\??????</returns>
        public VisibleState getVisibleState(Players player)
        {
            return searchImplementor.getVisibleState(player);
        }

        /// <summary>
        /// ?v???[???[???????????????????s???????\?????????????????\?b?h
        /// </summary>
        /// <param name="player">?s???????v???[???[</param>
        /// <param name="moveAction">?s???????e</param>
        /// <returns>?s???????\????????</returns>
        public bool moveActionEnable(Players player, MoveActions moveAction)
        {
            return searchImplementor.moveActionEnable(player, moveAction);
        }

        /// <summary>
        /// ?v???[???[???s???????s?????N???X
        /// </summary>
        /// <param name="player">?s???????v???[???[</param>
        /// <param name="moveAction">?s???????e</param>
        public void moveAction(Players player, MoveActions moveAction)
        {
            statas = searchImplementor.moveAction(player, moveAction);
        }

        /// <summary>
        /// ?????????u?????????\?b?h
        /// </summary>
        /// <returns>?????????u</returns>
        public Position getTreasurePosition()
        {
            return searchImplementor.getTreasurePosition();
        }

        /// <summary>
        /// ?w?????????v???[???[?????u?????????\?b?h
        /// </summary>
        /// <param name="player">?w?????????v???[???[</param>
        /// <returns>?v???[???[?????u</returns>
        public Position getPlayerPosition(Players player)
        {
            return searchImplementor.getPlayerPosition(player);
        }
    }
}
